import Head from 'next/head'
import Link from 'next/link'
import {useSession, signOut, getSession} from "next-auth/react"
import Sidebar from '../components/SideBar'
import { useEffect, useState } from 'react'
import SideBarAdmin from '../components/SideBarAdmin'
import SideBarProf from '../components/SideBarProf'
import SideBar from '../components/SideBar'
import Layout from '../components/Layout'



export default function Home({data}) {
  // connectMongo().catch(error=> res.json({error: "Connection Failed...!"}))
  // const [Session, setSession] = useState(false)
  const {data: session} = useSession()

  // console.log(session.user)
  // console.log(user)
  // console.log(data.user.role)
//  console.log(data.user[0])

  const Users = data.user.filter(e=>(e.email === session.user.email) && e.role ==="admin");
  const listDesProf = data.user.filter(e=>(e.email === session.user.email) && e.role ==="prof")
  console.log(Users)


  const isAdmin =  Users.length>0
  const isProf = listDesProf.length>0


console.log("hello "+isAdmin)
  return (
    <div >
      <Head>
        <title>Iset Nabeul</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>



      {/* <Login></Login> */}
      {/* <Guest/>
       */}
       {/* <User/>
       */}
      {/* {session && isAdmin ? <Layout user= {Users} admin="admin"/> : session && isProf ? <Layout admin="prof"/> : session ? <SideBar user={Users}/>: Guest()} */}

      {session&& <Layout/>}





      {/* <footer className={styles.footer}>

      </footer> */}
    </div>
  )
}

function Guest () {


  return (
    <main className='container mx-auto text-center py-20'>
      <h3 className='text-4xl font-bold'>
        Guest HomePage
      </h3>

      <div className="flex justify-center">
      <Link href={'/login'} legacyBehavior>
        <a className='mt-5 px-10 py-1 rounded-sm bg-indigo-500 text-gray'  > Sign In</a>
      </Link>
      </div>
    </main>
  )
}


//Authorize User
function User ({session}) {

  // Google Sign OUt
  async function handlerSignOut(){
    signOut()
  }

  return (
    <main className='container mx-auto text-center py-20'>
      <h3 className='text-4xl font-bold'>
        Authorize User HomePage
      </h3>
      <div className='details'>
        <h5>{session.user.name}</h5>
        <h5>{session.user.email}</h5>
      </div>

      <div className="flex justify-center">
        <button onClick={handlerSignOut} className='mt-5 px-10 py-1 rounded-sm bg-indigo-500 bg-gray-50'>Sign Out</button>
      </div>

      <div className="flex justify-center">
      <Link href={'/profile'} legacyBehavior>
        <a className='mt-5 px-10 py-1 rounded-sm bg-indigo-500 text-gray' > Profile Page</a>
      </Link>
      </div>
    </main>
  )
}

export async function getServerSideProps({req}) {
  const session = await getSession({req})
  const res = await fetch('http://localhost:3000/api/auth/fetchAdmin');
  console.log(session)
  const data = await res.json();
  if(!session) {
    return {
      redirect: {
        destination: '/login',
        permanent: false

      }
    }
  }
  return {
    props: {
      session,
      data
    }
  }
}


