// Generated by Xata Codegen 0.18.0. Please do not edit.
import {
  BaseClientOptions,
  buildClient,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "users",
    columns: [
      { name: "email", type: "email", unique: true },
      { name: "password", type: "string" },
      { name: "username", type: "string" },
    ],
  },
  {
    name: "basic_info",
    columns: [
      { name: "Full_name", type: "string" },
      { name: "Email", type: "string" },
      { name: "Address", type: "string" },
      { name: "Phone_number", type: "string" },
      { name: "Role", type: "string" },
      { name: "Profile_Photo_Url", type: "string" },
      { name: "Public_id", type: "string" },
      { name: "user", type: "string" },
      { name: "unique_id", type: "string" },
      { name: "Job_Title_Ex", type: "string" },
      { name: "City_town_Ex", type: "string" },
      { name: "Employer_Ex", type: "string" },
      { name: "Start_date_ex", type: "string" },
      { name: "End_Date_Ex", type: "string" },
      { name: "Achievement_one_Ex", type: "string" },
      { name: "Achievement_two_Ex", type: "string" },
      { name: "Achievement_three_Ex", type: "string" },
      { name: "Degree_Ed", type: "string" },
      { name: "City_Ed", type: "string" },
      { name: "School_Ed", type: "string" },
      { name: "Start_date_Ed", type: "string" },
      { name: "End_date_Ed", type: "string" },
      { name: "Award_one_Ed", type: "string" },
      { name: "Award_two_Ed", type: "string" },
      { name: "Award_three_Ed", type: "string" },
      { name: "Hobby", type: "string" },
      { name: "Company_name_Rfx", type: "string" },
      { name: "Contact_person_Rfx", type: "string" },
      { name: "Phone_number_Rfx", type: "string" },
      { name: "Email_Address_Rfx", type: "string" },
      { name: "Skill", type: "string" },
      { name: "Level_sk", type: "string" },
      { name: "Cert_Img_one_url", type: "string" },
      { name: "Cert_Img_two_url", type: "string" },
      { name: "Language", type: "string" },
      { name: "Cert_Public_Id", type: "string" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Users = InferredTypes["users"];
export type UsersRecord = Users & XataRecord;

export type BasicInfo = InferredTypes["basic_info"];
export type BasicInfoRecord = BasicInfo & XataRecord;

export type DatabaseSchema = {
  users: UsersRecord;
  basic_info: BasicInfoRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Zied-bousnina-s-workspace-lf56du.us-east-1.xata.sh/db/cv",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
